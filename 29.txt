How closed - source applications can exist . Should n't it be possible to reverse - engineer the source code of anything ? How can computers execute code that they ca n't see ? Explain like I'm five.<>Think of a program as being like a house . A house needs to be built from a blueprint so the people working on it know how to built it . However , even if they 've seen a similar house before , they do n't necessarily know how to build it just by looking at another one , even if it 's exactly the same as the new one is supposed to be . A source code is the blueprint of a program . When it goes through a process called \" compiling \" , the computer turns the source code into an executable program much like how the construction workers change the blueprints into a house . However , the executable does n't look just like the source code , as the source code is built to be a human readable code equivalent to what the computer can read while the executable is what it looks like after it is translated to the computer 's own language . This makes it so other programmers do n't know how to reproduce it just by looking at the executable program . Reverse engineering is theoretically possible with anything , but it is n't always easy , as you are trying to build a blueprint based on looking at the final product . It 's kind of like figuring out the instructions on a piece of furniture that you did n't get assembly instructions for : possible , but it 'll take some time to figure it all out and you probably wo n't get every step worded exactly like the original instructions .<>Closed-source applications are applications that have source code that is not available to the public. This means that the code that makes up the application is not shared, and people cannot see or modify it. However, even though the source code is not available, computers can still execute the code. This is because the source code is typically compiled into a form that computers can understand and execute directly, called machine code. The machine code is a series of instructions that the computer's processor can execute, and it does not need to be in a form that humans can read and understand. It is possible to reverse-engineer machine code to try to recreate the original source code, but it is a difficult and time-consuming process. It is also often not allowed by the terms of use for the application, as it can be considered copyright infringement. So, in short, closed-source applications can exist because the source code is compiled into a form that computers can execute, even though humans cannot see it.<>Closed-source applications are applications that have source code that is not available to the public. This means that the code that makes up the application is not shared, and people cannot see or modify it. However, even though the source code is not available, computers can still execute the code. This is because the source code is typically compiled into a form that computers can understand and execute directly, called machine code. The machine code is a series of instructions that the computer's processor can execute, and it does not need to be in a form that humans can read and understand. It is possible to reverse-engineer machine code to try to recreate the original source code, but it is a difficult and time-consuming process. It is also often not allowed by the terms of use for the application, as it can be considered copyright infringement. So, in short, closed-source applications can exist because the source code is compiled into a form that computers can execute, even though humans cannot see it.<>reddit_eli5